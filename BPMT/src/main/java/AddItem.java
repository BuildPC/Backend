import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Denizcan
 */
public class AddItem extends javax.swing.JFrame {

    /**
     * Creates new form AddItem
     */
    public AddItem() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ItemField = new javax.swing.JTextField();
        StockField = new javax.swing.JTextField();
        PriceField = new javax.swing.JTextField();
        DescField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ItemCombo = new javax.swing.JComboBox<>();
        AddButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        Pic = new javax.swing.JLabel();
        FileLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(843, 559));
        setSize(new java.awt.Dimension(843, 559));

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.setNextFocusableComponent(FileLabel);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Add Item");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Item name :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Stock value : ");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Price : ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Description : ");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Item photo : ");

        ItemField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Item Category");

        ItemCombo.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ItemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MotherBoard", "CPU", "GPU", "RAM", "SSD", "HDD", "Power Supply", "Keyboard", "Mouse", "Case" }));

        AddButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AddButton.setText("ADD");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        uploadButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        uploadButton.setText("Upload");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        Pic.setBackground(new java.awt.Color(255, 255, 255));

        FileLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        FileLabel.setText("File path");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ItemCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(ItemField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addGap(32, 32, 32))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(StockField)
                                    .addComponent(PriceField, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(20, 20, 20)
                                .addComponent(DescField)))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FileLabel)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(uploadButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                            .addComponent(Pic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StockField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(DescField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ItemField)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(uploadButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FileLabel)
                        .addGap(18, 18, 18)
                        .addComponent(Pic, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ItemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemFieldActionPerformed
    protected int Id;
    protected String itemName;
    protected double price;
    protected String description;
    protected int stock;
    
     private void close(){
        WindowEvent winClosingEvent = new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
       public static byte[] convertFileContentToBlob(String filePathStr) 
        throws IOException {
	// get path object pointing to file
	Path filePath = Paths.get(filePathStr);
	// get byte array with file contents
	byte[] fileContent = Files.readAllBytes(filePath);
	return fileContent;
}
       
   
    
    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed

        try{
        stock = Integer.parseInt(StockField.getText());
        itemName = ItemField.getText();
        description = DescField.getText();
        
        price = properfloat(PriceField.getText());
        
        }catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(jPanel1,"Check your data");
            System.out.println(nfe.getMessage());
        }
         String testPhoto="testLink";
      
        try {
            System.out.println(SQLUtilities.currenid(Frame.conn));
            SQLUtilities.AddItem(itemName,description,stock,(float)price,categorizer(ItemCombo.getSelectedItem().toString()),Frame.conn,testPhoto);
            Frame.conn.commit();
            JOptionPane.showMessageDialog(jPanel1,"Item added");
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(jPanel1,"Check your data");
        }
        
        System.out.println("Object added");
       
        close();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        
        chooser.showSaveDialog(jPanel1);
       // chooser.changeToParentDirectory();
       
        int tmp = SQLUtilities.currenid(Frame.conn)+1;
        System.out.println("tmp = "+tmp);
        File renFile = new File(tmp+".jpg");
        file = chooser.getSelectedFile();
         System.out.println(file.getName());
         System.out.println("renfile"+renFile.getName());
        file.renameTo(renFile);
        
        
//        if(file.renameTo(renFile)){
//            System.out.println(file.getName());
//        }
//        else{System.out.println("operation failed");}
//        
        System.out.println(file.getName());
        try{
            
            Files.copy(file.toPath(), renFile.toPath());
            
        Pic.setIcon(new ImageIcon(file.toString()));
        filename = file.getAbsolutePath();
        ss=filename;
        FileLabel.setText(filename);
       
        
            File image = new File (filename);
            
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos =new ByteArrayOutputStream();
            byte[]buf = new byte[1024];
                for(int readNum; (readNum=fis.read(buf))!=-1;){
                    bos.write(buf,0,readNum);
                }
        photo=bos.toByteArray();
        }catch(Exception e){
            JOptionPane.showMessageDialog(jPanel1,"File not selected");
            JOptionPane.showMessageDialog(jPanel1,e.getMessage());
    }
      
    }//GEN-LAST:event_uploadButtonActionPerformed

   public static int categorizer(String cat){
        int Id;
        switch(cat){
            case "MotherBoard":
                Id=0;
                break;
            case "CPU":
                Id=1;
                break;
            case "GPU":
                Id=2;
                break;
            case "SSD":
                Id=3;
                break;
            case "HDD":
                Id=4;
                break;
            case "RAM":
                Id=5;
                break;
            case "Power Supply":
                Id=6;
                break;
            case "Mouse":
                Id=7;
            case "Keyboard":
                Id=8;
                break;
            case "Case":
                Id=9;
            default:
                Id=-1;
                
        }
        return Id;
   
        
    }
     protected static double properfloat(String a){
         String replace = a.replace(".","");
         String replace1 = replace.replace(",", ".");
         String replace2 = replace1.replace("-","");
         double tmp = 0.0;
         tmp = Double.valueOf(replace2);
            return tmp;
   
    }
    
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField DescField;
    private javax.swing.JLabel FileLabel;
    private javax.swing.JComboBox<String> ItemCombo;
    private javax.swing.JTextField ItemField;
    private javax.swing.JLabel Pic;
    private javax.swing.JTextField PriceField;
    private javax.swing.JTextField StockField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
byte[] photo = null;
String filename ="";
public File file;

protected String ss;

}
